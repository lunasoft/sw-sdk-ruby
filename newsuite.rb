# To change this license header, choose License Headers in Project Properties.
# To change this template file, choose Tools | Templates
# and open the template in the editor.
# Importamos la libreria de SW-Services y la libreria de JSON para el parseo
# require 'SW-Services'
$LOAD_PATH << File.join(File.dirname(__FILE__),"lib")
require  "SWSDKRuby"

require 'json'

# Asignamos los valores que enviaremos a nuestro servicio
URL = 'http://services.test.sw.com.mx'
User = 'pruebas_ut@sw.com.mx'
Password = 'swpass'


# Enviamos los parametros al objeto dentro de la libreria SWauthentication
auth = SWauthentication.new
auth.authentication(URL,User,Password);


b64Cer = "MIIFijCCA3KgAwIBAgIUMzAwMDEwMDAwMDA0MDAwMDIzMzUwDQYJKoZIhvcNAQELBQAwggErMQ8wDQYDVQQDDAZBQyBVQVQxLjAsBgNVBAoMJVNFUlZJQ0lPIERFIEFETUlOSVNUUkFDSU9OIFRSSUJVVEFSSUExGjAYBgNVBAsMEVNBVC1JRVMgQXV0aG9yaXR5MSgwJgYJKoZIhvcNAQkBFhlvc2Nhci5tYXJ0aW5lekBzYXQuZ29iLm14MR0wGwYDVQQJDBQzcmEgY2VycmFkYSBkZSBjYWRpejEOMAwGA1UEEQwFMDYzNzAxCzAJBgNVBAYTAk1YMRkwFwYDVQQIDBBDSVVEQUQgREUgTUVYSUNPMREwDwYDVQQHDAhDT1lPQUNBTjERMA8GA1UELRMIMi41LjQuNDUxJTAjBgkqhkiG9w0BCQITFnJlc3BvbnNhYmxlOiBBQ0RNQS1TQVQwHhcNMTkwNTI5MTk1MDAxWhcNMjMwNTI5MTk1MDAxWjCBsTEdMBsGA1UEAxMUWE9DSElMVCBDQVNBUyBDSEFWRVoxHTAbBgNVBCkTFFhPQ0hJTFQgQ0FTQVMgQ0hBVkVaMR0wGwYDVQQKExRYT0NISUxUIENBU0FTIENIQVZFWjEWMBQGA1UELRMNQ0FDWDc2MDUxMDFQODEbMBkGA1UEBRMSQ0FDWDc2MDUxME1HVFNIQzA0MR0wGwYDVQQLExRYT0NISUxUIENBU0FTIENIQVZFWjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKvYaTyUuvtUIwymg88xS3Ri7W2J758lusEgwUaxdyIyxLQK2736yrK6RotjDu7pfbzqD5CyJ6gkT70x29QNe5MHUgcNPnARoYK2+0a0kWjpweNqjb0pCOMevUCzblF72c7MkErbW5qolIRIsI4UFSZOlLDI9O9lKm0Tk85Ab0siaqUefGl9lOOkjPT7Pr/CkHk4jxZJOzY2cWVey00vgFh/t9xxbF6Rvi738dfZ9R9h2TVEpaRRYb+m4rpTMos6HEfmhuKSsNe2/M8NDxC4zkcwdC5WS9NhNd4kUQ+7TFLmIo14tOXXSBZVVsg49/L+lq/eh44K1Ze3iSW9M7Ii8mECAwEAAaMdMBswDAYDVR0TAQH/BAIwADALBgNVHQ8EBAMCBsAwDQYJKoZIhvcNAQELBQADggIBAK1bJ6vhkqIF0Y4XnDUFQ/nZUOsQCXbs+czwu62kVaOffHWcKhJ1mTaSwkmFoqykV3VAib7RYKYTXcERow21uGEfnOhNxeSi4l2An7y6PtJOGy4wTjAX++iAeoh+ZDel3VBhvNYv6IZAcsVqdTl0Mfs/E7EuCc6YqumEBTbFTMcp92A31HWHqkI+UnXcogYndsaIK2m+iER6AHhUokfOjOiSJmSEovaXmaJVkmjbv3g07FeMB2fZ8fp3rrRtHjgTzbZyPY2LjhBnV/0vaTnGZH4l1RWZ+dgFn5/09GJJYLgaTBHpuRNBI6JRQ9/iR4NMjOEbNXDIpKibnIg3zG1yqQtUwQBUic0lF958n1KOg7fM+Msgq9Fjg2FY3aI2DAoGWKJR8PTiFbXy+Arpzd669QWzgIusT7KLwlFhKm+a+9dmE2lp0WUj2QH0drJdfSuvqA9ZIu3I0yvnpUT0jlun0PZyoloTOd5X+8z2kLSAxbZaOu9I4XATcwZntZK0FIueh4Htom524ne/MNp6nEXzpxV4HPiW626VoykB4AHJwIp7ljcg8D4IJ7oIF/0UEduwbsx3amAfDeg/9YtPRC4j5M0h3l7zLcJ2/BFwr8qYM74d0v00Hm4msirCPkE+kr58oL1NjwN7vvPA96HbSeBohH+f/X8FcZ965FhmjmZWgj0W"
b64Key = "MIIFDjBABgkqhkiG9w0BBQ0wMzAbBgkqhkiG9w0BBQwwDgQIAgEAAoIBAQACAggAMBQGCCqGSIb3DQMHBAgwggS8AgEAMASCBMh4EHl7aNSCaMDA1VlRoXCZ5UUmqErAbucRFLOMmsAaFA8WvOTkQ/E7oO8wZdxRpPywvFoemdb29Hy6I+EJyXlC/Wk2hxzmd+cGRuCU+6iKvwlXMoZERBgK2IjNHlFB1hRmvVRlrp6Xbe8TKwacEAY8phOLdpX0vOrC5GC50arjAq3N0HMxygrz//M4p/TCm59ATVaetJ4GnM3Ri8TrCPGR0Lhi/TAjxNG326FXF+NkAegS16PF/Xmeo8BlqEjCUHqzGs1CQJ799cmALb46oA+gjpYnymiWIJA6zYT6dIqmjYI9ENUI3h/Fu3NxtXi2BQUU8/iwy++xrlkKSKWwnqtQyuARDiUCiKOCeZ7r1xnd7SykU9Muv/gLplDF5vCkkbRSjFOM5NMpu9gYsNwq6u8sJn2QBXnzZYAEfEEGkGGhXNV26BJANu3HNTsCyxo+RyrLIRYyvdtmw5fk+6cFMn3ce2ipN7k6rpzhY/8DkEhnPIMVppN/TTxUmc4Zh7k807DFVoqEKtfBeOrrYk+DeAUqFykJgD0BTv7SmLjXmPkhqoNnrBG7ntrOnB+M8Z1x/Qdu2N//A0QP+TPM7nbAgNN46jtzzjhDtbP/vY3kGehiWieYpaVQO2vb4oJWuAN/y+DPcDnVr5k63ri/BCaGRyX0YpaCa9/TbsxWGPdEoorzU+Ss6A/X/pqttx1UiWrvXi8hmVEBaADpUBf4Sgbam9lcqyh/ojccIzXgok2llu9rKVZhYQgxzcQ6g/sQxIRzXyz5rtwdPg3R49EHMOZ9bCDagL3dcnsIH2BEG0XP8FFfqv4Nk4QsLMlVbRCi3rK1Ye8s21qwpwO02lH4ARz/VkzuQDTffYzUiVl1I2IB0JLVJeMIKxYSkEO+NyxzRIMR8ALPG6eNBhEJefwuTIkHKqmOFIHi9M2oZTcFp0jwn+h267HUL/F91xhWYF5EL3lNPZO0eic3TTw/eYFPA5kfHZUNj34GAirE5q5SKW0XijzlrLnobx4LpDjuxd1hfy313hTcLb/cy3x5ZkkXqjNX9xyJ+AH/tkgZLve20tP872Le7lxOzIyqMQ8t5eD0h47wiuV2DBZovhY6EbUO892DDD63NxnxGiVzqYxGkR71nu5tOWPvj1rMnXwuGPxzKRyLcLapYzr/CJ9k/XMLzFamxc0ZJnhQjRUszW1LF5Nxoi2I/9hlvSGywSDd0LtpoQRUqd4yOm01yrv4EGVfjRrP0PandT2zFS4BoZfXWpLNCuxIEYFPivPKXQHb58oawqw/7EErgTQL0dcyOqGA/cH8rs7G+5oJqg/Snu/50dYxqfoSC3DETKZUtVk86uIcVompgjK831X3Sq+sAgwO0/3LSoocQIA5p02ROECPhZrMvYcHWJZTTlrKDiXcTJKUtpG5iQInpfFYlBSe3UQyanyuwMwbEW0yn+YBk/EX8XTVPh+uSp2LZnF4dKKMfmXP/0uXAGlj9Ta2NAr78+PJgUAWCWJW6dAUsOH0denS4GIMNtDEOuUofYshzr2253XBWBrEq8KqSvWYQWyWyLCyLEkJam2oDGDWQCRLRqkxjJMy9qDJ2J0yuM1XJdRp1dpv/cKagxRlR9qbeEX8RIvDpGKJF8/Bg98hVs6A870="
token = "T2lYQ0t4L0RHVkR4dHZ5Nkk1VHNEakZ3Y0J4Nk9GODZuRyt4cE1wVm5tbXB3YVZxTHdOdHAwVXY2NTdJb1hkREtXTzE3dk9pMmdMdkFDR2xFWFVPUXpTUm9mTG1ySXdZbFNja3FRa0RlYURqbzdzdlI2UUx1WGJiKzViUWY2dnZGbFloUDJ6RjhFTGF4M1BySnJ4cHF0YjUvbmRyWWpjTkVLN3ppd3RxL0dJPQ.T2lYQ0t4L0RHVkR4dHZ5Nkk1VHNEakZ3Y0J4Nk9GODZuRyt4cE1wVm5tbFlVcU92YUJTZWlHU3pER1kySnlXRTF4alNUS0ZWcUlVS0NhelhqaXdnWTRncklVSWVvZlFZMWNyUjVxYUFxMWFxcStUL1IzdGpHRTJqdS9Zakw2UGRZbFlVYmJVSkxXa1NZNzN5VUlSUzlJaTYvbi9wczBSRnZGK1NUNUVoM1FNNXZJRUg1Qkx1dXJ1Z09EcHYyQnE4V1dnOHpkczFLdm5MZytxalNBeHdRbmFvb2VhTksrVzhyTTFXU09NbzZVeXMyQ2Q4VC9ncUlqWGZaMFhXSkdmcjJIWlB2Z2RmeFJGNzRkdXh2UHlvdnVhbGN6cGFsRWhSY3BOOWxPc0h4Z2ZJRjBjZEl5WEsvZW0vb0ZxZEJjUGtpRFlWYi9zRDZwZVJFRks0QUpRNkplZ2N4UzVEME40d2RhUHA4c1VUQWJiY1Jvc3NSVFcrRzVyTHNOTWovZlJHQmV6c0lmclE1TXV3aVY3UERtQUo3SjdpTzhuc1R1SGt1R0s0UHUvc3hEZWRtK3U0NExEYUdUVWIxL3NKRE1XY1RlTnNMaENoSFUvVGhaclk2WmNPR2JjUlpib1RPUTN5QUxiU0VEY0NpYmJDcDZHY3pGd0ZJMXcxTEExTnBPdzM.VZBKM8Odz5VdIyhQPZyRaJK1iVLmot-oMf0h69NU4vk"
pfx = "MIILyQIBAzCCC48GCSqGSIb3DQEHAaCCC4AEggt8MIILeDCCBi8GCSqGSIb3DQEH
BqCCBiAwggYcAgEAMIIGFQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQIX/HS
V2xB3cICAggAgIIF6I3HPx1JtOFsIl17vJXeMMEBLDN3U4GYr+vGpceG/Rev4gjU
RxCIZA2TlQqhbGNiZZvE90zs1VCnOCf67ELvikqShBMNb0osTDqZETRO3r1TFBla
+Yrc4OyihfQI2qaAzssDRlVqpP0w3gbbyWnLspwPzS6GgBuG4d/9jm7ijgpzoNPI
8LcI2F0ICtyI0YE3WgQpTDiHfEATE2m9vU8xGTfR9IKu7hMaB8AfVa8P8nxucdG9
sSVDz5x0c1LnRzH94X8kW14dnAzHRrw1GymoY6JLNddSGFBIAA4z9IixWDxhc11B
WZHgFx5PAY2dwVst356+VdJwSmP97yQ8lpqI67+S9ScmmIjWQ0MecH5hgx9wvdqG
voZDNEg3mPHEduh3UK5WdFkv69aEEdfTkny8yyTYWKh+W9Z6MXGbLkNhQTzsZlxn
o/xeXtKvDOPEvFQKlQdYyKJYkCqqfWEnkalsqPRV1JaVaVb99172KCEHRTsDjenV
yNdtk8iRi6knXtLqqVe9KceLp9TG5qMQicTMcCqwYLteH4csOavQj8cj4srMtKXZ
6UvWFEF6J22e59lSBLr0ltxvPH6kLsJ1qgXjepSG1ks68Bcmw5MfiqUUFuBtYUND
Zk9LpmEl91oDRSdYeV03rTRIylaxqlgmibm14sEEV8aUmAiSX8Env+nLnQmahEn0
vbLC2SavlG1uGAntIGRfx1a3y2omLRir09Y81JQCxopTl2uBeBIalw43YfMjYVVG
/m6qrr7NYsT4jKGlvMcnh8O02rq0wPb1QXAVQ3xt37hSWhy+akdalPwGws2UYL1n
xiecrx39d2qjmqOEHT/kMwFxcaJ1qg1m/1J7Mp35waNkjXku52AkSapa4CgzNek6
NE/ffwPXGN2IP2k/8LfeF7qpoYtXpfz7ZxxbURawO/XtEYivuWa8b9F0IqB2Khz0
yhIcXdtGp/oxkBAMChqze+QRgmWAtRI3+9NzOdZLnRqXQx2aiYY4nVeKkrBRAWC6
5pYb8E2/o8MVLyxj5nn7vMyz0W3OZO0Z2hWZX3xzv/txHEotWbaKxTygPmyOIdIK
aFVF9BjAab4beWkE/lKzvUFwVAS/qTmtlrwfx2Jy40mHo4Isozsac9z7f0ZE5Ubo
1o7FLoo+0FSOIkL6Y0nKSF4ZCONSJbDYzX3zgmTHvvS2EwGg4kfAPM3ThZutftni
5xSi7SqLQTkKome6jcHd5MOeFyihmOAmBCc/IPv5DLE40BpfLx5ubAL9gHiu9kKw
sYRFaG5oFBlHIotwNOdqJqxHLl0juiB7xAJmwNUFfhgg/N/9RW12Sk5sBa664701
+jtn3BdPMCONV0II4YU5yQeUBZjW0NZVGjOO/V5YBPo1G84QIS/jU15DfFvCLDUt
cF2C3JT6cK2/u2/xTRgCFQK440tPgBKGrRsVD8UE0Cx4cvD33n8xNr8JrllgmF+F
DV6aiT5Ag0suBmHCd3wWHVggaJOjiK7T1Rs2wqGGmU0f4AlvluQtT3sn2Y2rgwcn
U1yk5DbHWTzAHMQRf7Zb/XtArnfLoBz8k3Ib/ICpwHeboDCjDANdSLet2ZyN3Phs
5nQI/i2o7AQ797lBNT43oz5kTXABzhoNqOb5JOSNEjyIyS1GIjxGkipbzPSINrLM
4k/+IdLd4iqY66hT2DE0QeEvJAVkOd9KdIUJC0FSGAlTKNu6Lnm91iwNj4xyPpqm
nxnXCLTKhqp5i/M5QbSEzYk/LvtpYha43tVuBZtNWrN/VEJb9CfQkQhqu/c+BTQo
sFDCnASIHbr7NKJCY4arxU5hC8ZviWDN8lEtYwxQx+Eq4K5H/JiylDi3sw/OG68U
i5WFoQMqeZ402XeL2wg7UX1cLRR2bs7qiFivVe/OuGCoG05txQx2tzu8l02F/9US
2qzU3tqhz0yLZV1SFyXh9zNdP9AL0JVmuMshiNvXsL5zhqor2+Jrvfz+GllvwfT6
JNoNXzZeBzKbed/8V5TquE5OV2vHUA3OHGunDlKGZXNP6E7zFjCCBUEGCSqGSIb3
DQEHAaCCBTIEggUuMIIFKjCCBSYGCyqGSIb3DQEMCgECoIIE7jCCBOowHAYKKoZI
hvcNAQwBAzAOBAjJtSb/TjzVyAICCAAEggTIWy3XgZB8J+3BDZESHtFB6AMBqF5B
vvlNR6nawQEKExqlG3ogwxxRjCBLQIs6rEtCPxtqIISzAWnMmKnYUoSf5P78tyOL
Y2ZblgtC9un2DqlYpzoRwO62URRJT3AMd7BGerSY+DZfCAewPMBLovT/nQj4CD+r
mobH92q4xL0mJ8KkAl14dYdy7Xt2vuNkby4/EjMuIuU3ms/XIwkMUt9sEQ+4Tqvb
Ap/RHoWxnV1r8+NXq8TPmCyt19fXi4YBqRVTtUmBsNWigl6yW88IBygWNJPEETzz
letl395kcN/ybmvbjam2OoPAR1/i526RC3fWmo5NP/6adJ4CGn64UsovQczWg5YE
+Ppg2gAiliJdr6ZhzWgIYl5UHgRRgHCAQakFJSoOMsWgufsCJQIncvuBe4cKmDrO
lXInopKlxsF8KNV55SMgBP0/gDbQzOHQ4sziqJdtVnoajaR7zv6jPb96shuHQ9NT
ODfd0TqK1Xznosxwj+m0gdNugC24+hKvIhOfQXQBMAoPGVRwIvLlhIBsih0lvoJw
YMy6shQo7+c/u18PwqrsJghQvNe3FXXHOgOzo29IdWC6xtwJ1/S9W8fSMbLmEaYg
nUr1PsZFmK8arjRM6B3l7+aLd5lXARlZzAtBK7Docpa+HgK2zNDHIgMDn7swOj9R
Ly5zLUEFDDAWLN9p9xwvwHzrv2NKSA+NeX4ltVMgyFFaQBC44MUEn3O3658ZKwKN
8GXbw2oa8xQOgbjc4nnYJUcv0jOq1TxLZbNv0kUGOT1LFlZIXpSQEyMBUMqO2uvC
1+iEPJX4diEaQB582vu/HRNNQomJH3/BtEknVrFDErbDIfqF37HG1VmZetOvMcuy
b56qO18oam+cPVLZMQ89+YJxUvQHRXq6dCHTCN9FHvQoQ0/gcqCSNGQWHCxqO+ad
FqxlTEB1oz1IfDgfWSPWIWa3Yk/ZzW5WElFlEM9qiOqcJODOzZdHIyKQsg7Ud5Sz
jwehRyTTqHcK5x9Nj2wCD7O7NBtNOktvFgQmjyuZ4uB7a8iul4y6R44ZDeRX/1v4
JTmIXfdGCrX72YcWTTqv6hEtmUjap4Qn7ZvW5xtWS0wmqsVxZIzhAwRRchkbzMwW
i0HjhhAK+3+9G4RNXbvtagogMIifiaRklOh4cKSDwnj+EO0NHtkmSxl0ZS5r6gvT
nCbrmqdDmIj+rOjFvr9PW43AGsFwZbD1IiL+F1sJLdsFD4OShKCQsc1YBdDEATwb
L/5whOH1hBTo6Dq4j4dS0UavuNNtOnQasBS/VVupsUNtS1Rq7tP5cN9nTfQr40DF
qVXgRYQ7EiZbiT9fim9XTXhsPhTo+LSEUyAYJ1yRVQIyBA8XQMaAjl56Bsn8QXSe
e0RcKdpjYBSTd8QRcaHr/XizrPPjVTOUFuEjbFYMsJoPVd6AjRoQYTdreQ9hV39y
QSNGJDWi9WNLaL+tenIORPjz8i5TqTSeXdPvCvyEHUxMN9bwUy7mieOk1l6bStwu
inb6sXgKTi6oBfKUADrX11c2L7e07ee3ceRU1Q7cJgjNL3O62zmqjVfD3gbQl4YH
R6GinksRE5xdbxoHM4DwtljPVDQ1j9j9A4nzMXL0ku45vLLD/PWXiZA2wHotLRjf
2lOFMSUwIwYJKoZIhvcNAQkVMRYEFPryR7fUq1jDZDF9EfMA7HgY3gPaMDEwITAJ
BgUrDgMCGgUABBR/o70f2e3Uxxv/ez53Fi5TbwH7LwQIuKHeCP28A6kCAggA
"
# Obtenemos el valor del Token 
cancel = SWcancelation.new
data = cancel.cancelByUUID(URL, token,"XOJI740919U48", "cde49c80-73c8-49d4-9447-5062a15d784e","02")
# cancel.cancelByCSD(URL, token, "c87c3315-3f57-480b-8cc0-5792d476829f", "CACX7605101P8", "12345678a", b64Cer, b64Key,"01","957eb9d6-3787-449d-85dd-487865f055cb")
# data = cancel.cancelByPFX(URL,token,"86754a3f-0aa8-47cc-9ae2-daea094d6bbe","CACX7605101P8","12345678a",pfx,"02")
puts data
puts "Proceso Terminado"